>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg = BaseGeometry(5)
Traceback (most recent call last):
...
TypeError: BaseGeometry() takes no arguments

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> class CustomGeometry(BaseGeometry):
...     pass
...
>>> cg = CustomGeometry()
>>> cg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> class Square(BaseGeometry):
...     def __init__(self, size):
...         self.integer_validator("size", size)
...         self.__size = size
...     def area(self):
...         return self.__size * self.__size
...
>>> s = Square(5)
>>> s.area()
25

>>> s = Square(-5)
Traceback (most recent call last):
...
ValueError: size must be greater than 0

>>> s = Square("five")
Traceback (most recent call last):
...
TypeError: size must be an integer
